(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{381:function(e,t,a){"use strict";a.r(t);var r=a(13),l=Object(r.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h3",{attrs:{id:"hmr-hot-module-replacement"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hmr-hot-module-replacement"}},[e._v("#")]),e._v(" HMR（hot module replacement）")]),e._v(" "),t("p",[e._v("模块热替换，允许在运行时更新各种模块，而无需进行完全刷新")]),e._v(" "),t("ul",[t("li",[e._v("更新 webpack-dev-server 的配置")]),e._v(" "),t("li",[e._v("使用 webpack 内置的 HMR 插件")])]),e._v(" "),t("blockquote",[t("p",[e._v("如果你使用了 webpack-dev-middleware 而没有使用 webpack-dev-server，请使用 webpack-hot-middleware package 包，以在你的自定义服务或应用程序上启用 HMR。")])]),e._v(" "),t("blockquote",[t("p",[e._v("在实践过程中会有各种原因导致，代码更新了，但是页面表现像没有更新一样。还有很多其他地方可以轻松地让人犯错。幸运的是，存在很多 loader（其中一些在下面提到），使得模块热替换的过程变得更容易。")])]),e._v(" "),t("h4",{attrs:{id:"hmr修改样式表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hmr修改样式表"}},[e._v("#")]),e._v(" HMR修改样式表")]),e._v(" "),t("blockquote",[t("p",[e._v("借助于 style-loader 的帮助，CSS 的模块热替换实际上是相当简单的。当更新 CSS 依赖模块时，此 loader 在后台使用 module.hot.accept 来修补(patch) "),t("code",[e._v("<style>")]),e._v("标签。")])])])}),[],!1,null,null,null);t.default=l.exports}}]);