(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{467:function(t,v,a){"use strict";a.r(v);var _=a(65),e=Object(_.a)({},(function(){var t=this,v=t.$createElement,a=t._self._c||v;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"标识符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#标识符"}},[t._v("#")]),t._v(" 标识符")]),t._v(" "),a("p",[t._v("变量/函数/属性或者函数参数的名称。")]),t._v(" "),a("ul",[a("li",[t._v("第一个字符必须是一个字母，下划线或者美元$符号")]),t._v(" "),a("li",[t._v("剩下的字符可以是字母/下划线/美元符号或者数字")])]),t._v(" "),a("p",[a("strong",[t._v("ECMAScript标识符使用驼峰大小写形式")])]),t._v(" "),a("blockquote",[a("p",[t._v("关键字、保留字、true、false 和 null 不能作为标识符")])]),t._v(" "),a("p",[t._v("ECMAScript的变量是松散类型的\n可以用于保存任何类型的数据")]),t._v(" "),a("p",[t._v("每个变量都是用于保存任意值的命名占位符，三个关键字可以声明变量：var/let/const")]),t._v(" "),a("h3",{attrs:{id:"var声明变量提升"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#var声明变量提升"}},[t._v("#")]),t._v(" var声明变量提升")]),t._v(" "),a("p",[t._v("提升(hoist)把所有的变量声明都拉到函数作用域的顶部，此外反复多次用var声明同一个变量也没问题")]),t._v(" "),a("h4",{attrs:{id:"let声明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#let声明"}},[t._v("#")]),t._v(" let声明")]),t._v(" "),a("p",[t._v("和var的作用差不多，区别是：let声明的范围是块作用域,var声明的范围是函数作用域。\n不允许重复声明")]),t._v(" "),a("p",[t._v("let声明的变量不会在作用域中被提升，在let声明之前的执行瞬间被称为暂时性死区")]),t._v(" "),a("p",[t._v("全局作用域中：\nlet声明的对象不会成为window对象的属性，var声明的则会")]),t._v(" "),a("p",[t._v("let可以控制变量的作用域仅限于for循环块内部")]),t._v(" "),a("h3",{attrs:{id:"const声明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#const声明"}},[t._v("#")]),t._v(" const声明")]),t._v(" "),a("p",[t._v("与let的区别：")]),t._v(" "),a("ol",[a("li",[t._v("声明变量时必须同时初始化变量")]),t._v(" "),a("li",[t._v("尝试修改const声明的变量时会导致运行时错误")])]),t._v(" "),a("p",[t._v("相同点：")]),t._v(" "),a("ol",[a("li",[t._v("作用域也是块")]),t._v(" "),a("li",[t._v("不允许重复声明")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("for (const key in {a:1,b:2}){\n  console.log(key)\n}\n//a,b\n\nfor(const value of [1,2,3,4,5])\n//1,2,3,4,5\n")])])]),a("p",[t._v("使用let/const的优点：")]),t._v(" "),a("ol",[a("li",[t._v("变量有了明确的作用域、声明位置")]),t._v(" "),a("li",[t._v("优先使用const，let次之，迅速发现因为意外赋值导致的非预期行为")])])])}),[],!1,null,null,null);v.default=e.exports}}]);