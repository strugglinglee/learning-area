(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{385:function(e,t,s){"use strict";s.r(t);var a=s(13),r=Object(a.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h3",{attrs:{id:"tree-shaking"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tree-shaking"}},[e._v("#")]),e._v(" tree-shaking")]),e._v(" "),t("p",[e._v("通常用于移除 js 上下文中的未引用代码（dead-coding）。")]),e._v(" "),t("p",[e._v("它依赖于 ES2015 模块系统中的静态结构特性，例如"),t("code",[e._v("import")]),e._v("和"),t("code",[e._v("export")])]),e._v(" "),t("p",[e._v("使用tree-shaking需要做到：")]),e._v(" "),t("ul",[t("li",[e._v("使用 ES2015 模块语法（即 import 和 export）。")]),e._v(" "),t("li",[e._v('在项目 package.json 文件中，添加一个 "sideEffects" 入口。')]),e._v(" "),t("li",[e._v("引入一个能够删除未引用代码(dead code)的压缩工具(minifier)（例如 UglifyJSPlugin）。")])]),e._v(" "),t("h4",{attrs:{id:"package-json-的-sideeffects"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#package-json-的-sideeffects"}},[e._v("#")]),e._v(' package.json 的 "sideEffects"')]),e._v(" "),t("p",[t("strong",[e._v("副作用:")]),e._v("\n在导入时会执行特殊行为的代码，而不是仅仅暴露一个 export 或多个 export。举例说明，例如 polyfill，它影响全局作用域，并且通常不提供 export。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('//告知 webpack，它可以安全地删除未用到的 export 导出\n{\n  "name": "your-project",\n  "sideEffects": false\n}\n')])])]),t("p",[e._v("如果代码中确实有一些副作用，可以改为提供一个数组:\n数组方式支持相关文件的相对路径、绝对路径和 glob 模式。它在内部使用 micromatch。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('"sideEffects": [\n  "./src/some-side-effectful-file.js",\n  "*.css"\n]\n')])])]),t("blockquote",[t("p",[e._v("注意，任何导入的文件都会受到 tree shaking 的影响。这意味着，如果在项目中使用类似 css-loader 并导入 CSS 文件，则需要将其添加到 side effect 列表中，以免在生产模式中无意中将它删除")])]),e._v(" "),t("h4",{attrs:{id:"压缩输出"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#压缩输出"}},[e._v("#")]),e._v(" 压缩输出")]),e._v(" "),t("p",[e._v("通过 import 和 export 语法，找出那些需要删除的“未使用代码(dead code)”")]),e._v(" "),t("p",[e._v("为了在 bundle 中删除它们。我们将使用 -p(production) 这个 webpack 编译标记，来启用 "),t("strong",[e._v("uglifyjs")]),e._v(" 压缩插件。")]),e._v(" "),t("blockquote",[t("p",[e._v('注意，--optimize-minimize 标记也会在 webpack 内部调用 UglifyJsPlugin。\n从 webpack 4 开始，也可以通过 "mode" 配置选项轻松切换到压缩输出，只需设置为 "production"')])]),e._v(" "),t("h4",{attrs:{id:"其他压缩插件推荐"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#其他压缩插件推荐"}},[e._v("#")]),e._v(" 其他压缩插件推荐")]),e._v(" "),t("ul",[t("li",[e._v("BabelMinifyWebpackPlugin")]),e._v(" "),t("li",[e._v("ClosureCompilerPlugin")])])])}),[],!1,null,null,null);t.default=r.exports}}]);