(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{533:function(a,e,t){"use strict";t.r(e);var s=t(62),r=Object(s.a)({},(function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"生产环境的构建"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#生产环境的构建"}},[a._v("#")]),a._v(" 生产环境的构建")]),a._v(" "),t("h3",{attrs:{id:"开发环境和生产环境"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#开发环境和生产环境"}},[a._v("#")]),a._v(" 开发环境和生产环境")]),a._v(" "),t("h4",{attrs:{id:"开发环境"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#开发环境"}},[a._v("#")]),a._v(" 开发环境")]),a._v(" "),t("ul",[t("li",[a._v("需要强大的、具有实时重新加载(live reloading)")]),a._v(" "),t("li",[a._v("热模块替换（HMR）能力的"),t("code",[a._v("source map")]),a._v("和"),t("code",[a._v("localhost server")])])]),a._v(" "),t("h4",{attrs:{id:"生产环境"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#生产环境"}},[a._v("#")]),a._v(" 生产环境")]),a._v(" "),t("p",[a._v("目的：改善加载时间")]),a._v(" "),t("ul",[t("li",[a._v("更小的 bundle")]),a._v(" "),t("li",[a._v("更轻量的 source map")]),a._v(" "),t("li",[a._v("更优化的资源")])]),a._v(" "),t("h4",{attrs:{id:"不重复原则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#不重复原则"}},[a._v("#")]),a._v(" 不重复原则")]),a._v(" "),t("p",[a._v("不重复原则(Don't repeat yourself - DRY)")]),a._v(" "),t("p",[a._v("保留一个“通用”配置。为了将这些配置合并在一起，我们将使用一个名为 webpack-merge 的工具。通过“通用”配置，我们不必在环境特定(environment-specific)的配置中重复代码。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("npm install --save-dev webpack-merge\n")])])]),t("h4",{attrs:{id:"webpack-common-js"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webpack-common-js"}},[a._v("#")]),a._v(" webpack.common.js")]),a._v(" "),t("p",[a._v("我们设置了 entry 和 output 配置，并且在其中引入这两个环境公用的全部插件。")]),a._v(" "),t("h4",{attrs:{id:"webpack-dev-js"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webpack-dev-js"}},[a._v("#")]),a._v(" webpack.dev.js")]),a._v(" "),t("p",[a._v("添加了推荐的 devtool（强大的 source map）和简单的 devServer 配置。")]),a._v(" "),t("blockquote",[t("p",[a._v('配置脚本： "start": "webpack --config webpack.dev.js",')])]),a._v(" "),t("h4",{attrs:{id:"webpack-prod-js-生产环境"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webpack-prod-js-生产环境"}},[a._v("#")]),a._v(" webpack.prod.js（生产环境）")]),a._v(" "),t("p",[a._v("我们引入了之前在 tree shaking 指南中介绍过的 UglifyJSPlugin。")]),a._v(" "),t("blockquote",[t("p",[a._v('配置脚本： "build": "webpack --config webpack.prod.js"')])]),a._v(" "),t("h4",{attrs:{id:"生产环境中启用-source-map"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#生产环境中启用-source-map"}},[a._v("#")]),a._v(" 生产环境中启用 source map")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("devtool: 'source-map'\nplugins: [\n    new UglifyJSPlugin({\n      sourceMap: true\n    })\n]\n")])])]),t("blockquote",[t("p",[a._v("避免在生产中使用 "),t("code",[a._v("inline-***")]),a._v(" 和 "),t("code",[a._v("eval-***")]),a._v("，因为它们可以增加 bundle 大小，并降低整体性能。")])]),a._v(" "),t("h3",{attrs:{id:"指定环境"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#指定环境"}},[a._v("#")]),a._v(" 指定环境")]),a._v(" "),t("p",[a._v("许多 library 将通过与 process.env.NODE_ENV 环境变量关联，以决定 library 中应该引用哪些内容。")]),a._v(" "),t("p",[t("strong",[a._v("可以使用 webpack 内置的 DefinePlugin 为所有的依赖定义这个变量（推荐）")])]),a._v(" "),t("blockquote",[t("p",[a._v("配置方式能够更好地帮助你了解自己正在做的事情。配置方式还可以让你更方便地控制这两个插件中的其他选项")])]),a._v(" "),t("h4",{attrs:{id:"cli替代选项"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cli替代选项"}},[a._v("#")]),a._v(" CLI替代选项")]),a._v(" "),t("p",[a._v("例如，--optimize-minimize 标记将在后台引用 UglifyJSPlugin。和以上描述的 DefinePlugin 实例相同，--define process.env.NODE_ENV=\"'production'\" 也会做同样的事情。并且，webpack -p 将自动地调用上述这些标记，从而调用需要引入的插件。")]),a._v(" "),t("h3",{attrs:{id:"split-css"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#split-css"}},[a._v("#")]),a._v(" split css")]),a._v(" "),t("p",[a._v("使用 ExtractTextPlugin 将 CSS 分离成单独的文件。\ndisable 选项可以和 --env 标记结合使用，以允许在开发中进行内联加载，推荐用于热模块替换和构建速度。")])])}),[],!1,null,null,null);e.default=r.exports}}]);