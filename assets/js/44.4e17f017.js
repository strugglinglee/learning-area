(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{488:function(e,t,n){"use strict";n.r(t);var a=n(65),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("p",[e._v("导入导出模块的方法")]),e._v(" "),n("h3",{attrs:{id:"commonjs"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#commonjs"}},[e._v("#")]),e._v(" CommonJS")]),e._v(" "),n("ul",[n("li",[e._v("同步导入模块")]),e._v(" "),n("li",[e._v("导入时会给你一个导入对象的副本")]),e._v(" "),n("li",[e._v("不能在浏览器中工作，必须经过转换和打包")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("//import 引入\nconst A = require ('./a.js')\n\n// a.js export导出\nmodule.exports = function A (n){\n  //...\n}\n")])])]),n("h3",{attrs:{id:"amd-asynchronously"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#amd-asynchronously"}},[e._v("#")]),e._v(" AMD(asynchronously)")]),e._v(" "),n("ul",[n("li",[e._v("异步导入模块")]),e._v(" "),n("li",[e._v("提议时，AMD是为前端而做（CJS是后端）")]),e._v(" "),n("li",[e._v("语法不如CJS直观")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("define(['dep1', 'dep2'], function (dep1, dep2) {\n    //Define the module value by returning a value.\n    return function () {};\n});\n")])])]),n("h3",{attrs:{id:"umd-universal-module-definition"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#umd-universal-module-definition"}},[e._v("#")]),e._v(" UMD(universal module definition)")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('(function (root, factory) {\n    if (typeof define === "function" && define.amd) {\n        define(["jquery", "underscore"], factory);\n    } else if (typeof exports === "object") {\n        module.exports = factory(require("jquery"), require("underscore"));\n    } else {\n        root.Requester = factory(root.$, root._);\n    }\n}(this, function ($, _) {\n    // this is where I defined my module implementation\n\n    var Requester = { // ... };\n\n    return Requester;\n}));\n')])])]),n("ul",[n("li",[e._v("在前后端都通用(universal)")]),e._v(" "),n("li",[e._v("与CJS和AMD不同，UMD更像是一种配置多个模块系统的模式")]),e._v(" "),n("li",[e._v("使用Rollup/webpack之类的打包器时，UMD通常用作备用模块")])]),e._v(" "),n("h3",{attrs:{id:"esm"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#esm"}},[e._v("#")]),e._v(" ESM")]),e._v(" "),n("p",[e._v("代表"),n("code",[e._v("ES")]),e._v("模块，是js提出的实现一个标准模块系统的方案。")]),e._v(" "),n("ul",[n("li",[e._v("在很多现代浏览器可以使用")]),e._v(" "),n("li",[e._v("兼具两个优点：具有"),n("code",[e._v("CJS的简单语法")]),e._v("和"),n("code",[e._v("AMD的异步")])]),e._v(" "),n("li",[e._v("得益于ES6的静态模块结构，可以进行tree shaking")]),e._v(" "),n("li",[e._v("ESM允许像Rollup这样的打包器，删除不必要的代码，减少代码包可以获得更快的加载")]),e._v(" "),n("li",[e._v("可以在html中调用"),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('<script type="module">\n  import {func1} from \'my-lib\n<\/script>\n')])])])])]),e._v(" "),n("p",[n("strong",[e._v("由于 ESM 具有简单的语法，异步特性和可摇树性，因此它是最好的模块化方案")]),e._v("\nUMD 随处可见，通常在 ESM 不起作用的情况下用作备用\nCJS 是同步的，适合后端\nAMD 是异步的，适合前端")])])}),[],!1,null,null,null);t.default=s.exports}}]);