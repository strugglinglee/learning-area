(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{481:function(o,e,t){"use strict";t.r(e);var s=t(62),r=Object(s.a)({},(function(){var o=this,e=o.$createElement,t=o._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":o.$parent.slotKey}},[t("p",[t("a",{attrs:{href:"https://es6.ruanyifeng.com/#docs/module-loader#ES6-%E6%A8%A1%E5%9D%97%E4%B8%8E-CommonJS-%E6%A8%A1%E5%9D%97%E7%9A%84%E5%B7%AE%E5%BC%82",target:"_blank",rel:"noopener noreferrer"}},[o._v("es6教程"),t("OutboundLink")],1)]),o._v(" "),t("h3",{attrs:{id:"javascript-的两种模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#javascript-的两种模块"}},[o._v("#")]),o._v(" JavaScript 的两种模块")]),o._v(" "),t("ol",[t("li",[o._v("一种是 ES6 模块，简称 ESM；")]),o._v(" "),t("li",[o._v("另一种是 CommonJS 模块，简称 CJS。")])]),o._v(" "),t("blockquote",[t("p",[o._v("CommonJS 模块是 Node.js 专用的，与 ES6 模块不兼容。\n语法上面，两者最明显的差异是，CommonJS 模块使用require()和module.exports，ES6 模块使用import和export。\n它们采用不同的加载方案。从 Node.js v13.2 版本开始，Node.js 已经默认打开了 ES6 模块支持。")])]),o._v(" "),t("h3",{attrs:{id:"后缀名"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#后缀名"}},[o._v("#")]),o._v(" 后缀名")]),o._v(" "),t("p",[o._v('Node.js 要求 ES6 模块采用.mjs后缀文件名。也就是说，只要脚本文件里面使用import或者export命令，那么就必须采用.mjs后缀名。\nNode.js 遇到.mjs文件，就认为它是 ES6 模块，默认启用严格模式，不必在每个模块文件顶部指定"use strict"。')]),o._v(" "),t("p",[o._v("如果不希望将后缀名改成.mjs，可以在项目的package.json文件中，指定type字段为module。")]),o._v(" "),t("p",[t("strong",[o._v(".mjs文件总是以 ES6 模块加载，.cjs文件总是以 CommonJS 模块加载，.js文件的加载取决于package.json里面type字段的设置。")])]),o._v(" "),t("h3",{attrs:{id:"commonjs和esm的三个重大差异"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#commonjs和esm的三个重大差异"}},[o._v("#")]),o._v(" CommonJS和ESM的三个重大差异")]),o._v(" "),t("ul",[t("li",[o._v("CommonJS 模块输出的是一个"),t("code",[o._v("值的拷贝")]),o._v("，ES6 模块输出的是"),t("code",[o._v("值的引用")]),o._v("。")]),o._v(" "),t("li",[o._v("CommonJS 模块是"),t("code",[o._v("运行时加载")]),o._v("，ES6 模块是"),t("code",[o._v("编译时输出接口")]),o._v("。")]),o._v(" "),t("li",[o._v("CommonJS 模块的"),t("code",[o._v("require()是同步加载模块")]),o._v("，ES6 模块的"),t("code",[o._v("import命令是异步加载")]),o._v("，有一个"),t("code",[o._v("独立的模块依赖")]),o._v("的解析阶段。")])]),o._v(" "),t("p",[o._v("第二个差异是因为 CommonJS 加载的是一个对象（即module.exports属性），该对象只有在脚本运行完才会生成。\n而 ES6 模块不是对象，它的对外接口只是一种静态定义，在代码静态解析阶段就会生成。")]),o._v(" "),t("blockquote",[t("p",[o._v("ES6 模块的import命令可以加载 CommonJS 模块，但是只能整体加载，不能只加载单一的输出项。")])]),o._v(" "),t("h3",{attrs:{id:"同时支持-commonjs-和-es6-两种格式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#同时支持-commonjs-和-es6-两种格式"}},[o._v("#")]),o._v(" 同时支持 CommonJS 和 ES6 两种格式")]),o._v(" "),t("p",[o._v("如果原始模块是 ES6 格式，那么需要给出一个整体输出接口，比如export default obj，使得 CommonJS 可以用import()进行加载。")])])}),[],!1,null,null,null);e.default=r.exports}}]);